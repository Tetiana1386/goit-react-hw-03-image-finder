{"version":3,"sources":["services/apiService.js","component/Container/Container.js","component/Searchbar/Searchbar.js","component/ImageGalleryItem/ImageGalleryItem.js","component/ImageGallery/ImageGallery.js","component/Button/Button.js","component/Loader/Loader.js","component/Modal/Modal.js","component/Error/no_result.jpeg","component/Error/Error.js","App.js","index.js"],"names":["fetchImages","query","page","a","axios","get","data","hits","Container","children","className","Searchbar","onHandleSubmit","onHandleChangeQuery","onSubmit","type","autoComplete","autoFocus","placeholder","value","onChange","ImageGalleryItem","webformatURL","largeImageURL","tags","onOpenModal","src","alt","onClick","ImageGallery","images","map","id","Button","onLoadMore","LoaderComponent","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onToggleModal","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","Component","ErrorComponent","texterror","role","errorImage","text","App","state","isLoading","showModal","error","handleChange","event","setState","handleSubmit","preventDefault","renderImages","scroll","trim","toast","info","toggleLoader","request","length","dataset","source","toggleModal","scrollToBottom","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e727a29.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '21693934-b739dad2632fdbf7884e4d0a2';\n\nconst fetchImages = async (query, page) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  return data.hits;\n};\n\nexport default fetchImages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Container.css';\n\nfunction Container({ children }) {\n  return <div className=\"Container\">{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Searchbar.css';\n\nfunction Searchbar({ onHandleSubmit, onHandleChangeQuery, query }) {\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={onHandleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={onHandleChangeQuery}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onHandleSubmit: PropTypes.func.isRequired,\n  onHandleChangeQuery: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nfunction ImageGalleryItem({ webformatURL, largeImageURL, tags, onOpenModal }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        className=\"ImageGalleryItem-image\"\n        src={webformatURL}\n        alt={tags}\n        data-source={largeImageURL}\n        onClick={onOpenModal}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport './ImageGallery.css';\n\nfunction ImageGallery({ images, onOpenModal }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n          onOpenModal={onOpenModal}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nfunction Button({ onLoadMore }) {\n  return (\n    <div className=\"Button_wrapper\">\n      <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\n        Load more\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './Loader.css';\n\nfunction LoaderComponent() {\n  return (\n    <div className=\"Overlay\">\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={0}\n      />\n    </div>\n  );\n}\n\nexport default LoaderComponent;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onToggleModal();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onToggleModal();\n    }\n  };\n\n  render() {\n    const { largeImageURL } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onToggleModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/no_result.1fae5933.jpeg\";","import PropTypes from 'prop-types';\nimport errorImage from './no_result.jpeg';\nimport './Error.css';\n\nfunction ErrorComponent({ texterror }) {\n  return (\n    <div role=\"alert\" className=\"Wrapper\">\n      <img src={errorImage} width=\"550\" alt=\"no_res\" />\n      <p text={texterror} className=\"Text\">\n        {texterror}\n      </p>\n    </div>\n  );\n}\n\nErrorComponent.propTypes = {\n  texterror: PropTypes.string.isRequired,\n};\n\nexport default ErrorComponent;\n","import React, { Component } from 'react';\nimport fetchImages from './services/apiService';\nimport Container from './component/Container';\nimport Searchbar from './component/Searchbar';\nimport ImageGallery from './component/ImageGallery';\nimport Button from './component/Button';\nimport LoaderComponent from './component/Loader';\nimport Modal from './component/Modal';\nimport ErrorComponent from './component/Error';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { animateScroll as scroll } from 'react-scroll';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    query: '',\n    images: [],\n    page: 1,\n    isLoading: false,\n    largeImageURL: '',\n    showModal: false,\n    error: null,\n  };\n\n  //componentDidUpdate(_prevProps, prevState) {\n  //if (prevState.query !== this.state.query) {\n  //this.setState({ images: [], page: 1, error: null });\n  //}\n  //};\n\n  handleChange = event => {\n    this.setState({ query: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.renderImages();\n  };\n\n  onLoadMore = () => {\n    this.renderImages();\n    this.scroll();\n  };\n\n  renderImages = async () => {\n    const { query, page } = this.state;\n\n    if (!query.trim()) {\n      return toast.info('Please enter a value for search images!');\n    }\n\n    this.toggleLoader();\n\n    try {\n      const request = await fetchImages(query, page);\n      this.setState(({ images, page }) => ({\n        images: [...images, ...request],\n        page: page + 1,\n      }));\n      if (request.length === 0) {\n        this.setState({ error: `No results were found for ${query}!` });\n      }\n    } catch (error) {\n      this.setState({ error: 'Something went wrong. Try again.' });\n    } finally {\n      this.toggleLoader();\n    }\n  };\n\n  onOpenModal = e => {\n    this.setState({ largeImageURL: e.target.dataset.source });\n    this.toggleModal();\n  };\n\n  toggleLoader = () => {\n    this.setState(({ isLoading }) => ({\n      isLoading: !isLoading,\n    }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  scroll = () => {\n    scroll.scrollToBottom();\n  };\n\n  render() {\n    const { query, images, largeImageURL, isLoading, showModal, error } =\n      this.state;\n\n    return (\n      <Container>\n        <Searchbar\n          onHandleSubmit={this.handleSubmit}\n          onHandleChangeQuery={this.handleChange}\n          query={query}\n        />\n\n        {error && <ErrorComponent texterror={error} />}\n\n        {isLoading && <LoaderComponent />}\n\n        {images.length > 0 && !error && (\n          <ImageGallery images={images} onOpenModal={this.onOpenModal} />\n        )}\n\n        {!isLoading && images.length > 0 && !error && (\n          <Button onLoadMore={this.onLoadMore} />\n        )}\n\n        {showModal && (\n          <Modal\n            onToggleModal={this.toggleModal}\n            largeImageURL={largeImageURL}\n          />\n        )}\n\n        <ToastContainer />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}